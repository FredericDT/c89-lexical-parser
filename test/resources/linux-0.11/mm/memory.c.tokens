<punctuator, #>
<identifier, include>
<header_name, <signal.h>>
<punctuator, #>
<identifier, include>
<header_name, <asm/system.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/sched.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/head.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/kernel.h>>
<keyword, volatile>
<keyword, void>
<identifier, do_exit>
<operator, (>
<keyword, long>
<identifier, code>
<operator, )>
<punctuator, ;>
<keyword, static>
<identifier, inline>
<keyword, volatile>
<keyword, void>
<identifier, oom>
<operator, (>
<keyword, void>
<operator, )>
<punctuator, {>
<identifier, printk>
<operator, (>
<string_literal, "out of memory\n\r">
<operator, )>
<punctuator, ;>
<identifier, do_exit>
<operator, (>
<identifier, SIGSEGV>
<operator, )>
<punctuator, ;>
<punctuator, }>
<operator, #>
<identifier, define>
<identifier, invalidate>
<operator, (>
<operator, )>
<unknown, \>
<identifier, __asm__>
<operator, (>
<string_literal, "movl %%eax,%%cr3">
<operator, :>
<operator, :>
<string_literal, "a">
<operator, (>
<integer_constant, 0>
<operator, )>
<operator, )>
<operator, #>
<identifier, define>
<identifier, LOW_MEM>
<integer_constant, 0x100000>
<operator, #>
<identifier, define>
<identifier, PAGING_MEMORY>
<operator, (>
<integer_constant, 15>
<operator, *>
<integer_constant, 1024>
<operator, *>
<integer_constant, 1024>
<operator, )>
<operator, #>
<identifier, define>
<identifier, PAGING_PAGES>
<operator, (>
<identifier, PAGING_MEMORY>
<operator, >>>
<integer_constant, 12>
<operator, )>
<operator, #>
<identifier, define>
<identifier, MAP_NR>
<operator, (>
<identifier, addr>
<operator, )>
<operator, (>
<operator, (>
<operator, (>
<identifier, addr>
<operator, )>
<operator, ->
<identifier, LOW_MEM>
<operator, )>
<operator, >>>
<integer_constant, 12>
<operator, )>
<operator, #>
<identifier, define>
<identifier, USED>
<integer_constant, 100>
<operator, #>
<identifier, define>
<identifier, CODE_SPACE>
<operator, (>
<identifier, addr>
<operator, )>
<operator, (>
<operator, (>
<operator, (>
<operator, (>
<identifier, addr>
<operator, )>
<operator, +>
<integer_constant, 4095>
<operator, )>
<operator, &>
<operator, ~>
<integer_constant, 4095>
<operator, )>
<operator, <>
<unknown, \>
<identifier, current>
<operator, ->>
<identifier, start_code>
<operator, +>
<identifier, current>
<operator, ->>
<identifier, end_code>
<operator, )>
<keyword, static>
<keyword, long>
<identifier, HIGH_MEMORY>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<operator, #>
<identifier, define>
<identifier, copy_page>
<operator, (>
<identifier, from>
<operator, ,>
<identifier, to>
<operator, )>
<unknown, \>
<identifier, __asm__>
<operator, (>
<string_literal, "cld ; rep ; movsl">
<operator, :>
<operator, :>
<string_literal, "S">
<operator, (>
<identifier, from>
<operator, )>
<operator, ,>
<string_literal, "D">
<operator, (>
<identifier, to>
<operator, )>
<operator, ,>
<string_literal, "c">
<operator, (>
<integer_constant, 1024>
<operator, )>
<operator, :>
<string_literal, "cx">
<operator, ,>
<string_literal, "di">
<operator, ,>
<string_literal, "si">
<operator, )>
<keyword, static>
<keyword, unsigned>
<keyword, char>
<identifier, mem_map>
<operator, [>
<identifier, PAGING_PAGES>
<operator, ]>
<operator, =>
<punctuator, {>
<integer_constant, 0>
<operator, ,>
<punctuator, }>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, get_free_page>
<operator, (>
<keyword, void>
<operator, )>
<punctuator, {>
<keyword, register>
<keyword, unsigned>
<keyword, long>
<identifier, __res>
<identifier, asm>
<operator, (>
<string_literal, "ax">
<operator, )>
<punctuator, ;>
<identifier, __asm__>
<operator, (>
<string_literal, "std ; repne ; scasb\n\t">
<string_literal, "jne 1f\n\t">
<string_literal, "movb $1,1(%%edi)\n\t">
<string_literal, "sall $12,%%ecx\n\t">
<string_literal, "addl %2,%%ecx\n\t">
<string_literal, "movl %%ecx,%%edx\n\t">
<string_literal, "movl $1024,%%ecx\n\t">
<string_literal, "leal 4092(%%edx),%%edi\n\t">
<string_literal, "rep ; stosl\n\t">
<string_literal, "movl %%edx,%%eax\n">
<string_literal, "1:">
<operator, :>
<string_literal, "=a">
<operator, (>
<identifier, __res>
<operator, )>
<operator, :>
<string_literal, "0">
<operator, (>
<integer_constant, 0>
<operator, )>
<operator, ,>
<string_literal, "i">
<operator, (>
<identifier, LOW_MEM>
<operator, )>
<operator, ,>
<string_literal, "c">
<operator, (>
<identifier, PAGING_PAGES>
<operator, )>
<operator, ,>
<string_literal, "D">
<operator, (>
<identifier, mem_map>
<operator, +>
<identifier, PAGING_PAGES>
<operator, ->
<integer_constant, 1>
<operator, )>
<operator, :>
<string_literal, "di">
<operator, ,>
<string_literal, "cx">
<operator, ,>
<string_literal, "dx">
<operator, )>
<punctuator, ;>
<keyword, return>
<identifier, __res>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, free_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, addr>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, addr>
<operator, <>
<identifier, LOW_MEM>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, addr>
<operator, >>
<operator, =>
<identifier, HIGH_MEMORY>
<operator, )>
<identifier, panic>
<operator, (>
<string_literal, "trying to free nonexistent page">
<operator, )>
<punctuator, ;>
<identifier, addr>
<operator, ->
<operator, =>
<identifier, LOW_MEM>
<punctuator, ;>
<identifier, addr>
<operator, >>>
<operator, =>
<integer_constant, 12>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, mem_map>
<operator, [>
<identifier, addr>
<operator, ]>
<operator, -->
<operator, )>
<keyword, return>
<punctuator, ;>
<identifier, mem_map>
<operator, [>
<identifier, addr>
<operator, ]>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, panic>
<operator, (>
<string_literal, "trying to free free page">
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, free_page_tables>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, from>
<operator, ,>
<keyword, unsigned>
<keyword, long>
<identifier, size>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, pg_table>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, dir>
<operator, ,>
<identifier, nr>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, from>
<operator, &>
<integer_constant, 0x3fffff>
<operator, )>
<identifier, panic>
<operator, (>
<string_literal, "free_page_tables called with wrong alignment">
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, from>
<operator, )>
<identifier, panic>
<operator, (>
<string_literal, "Trying to free up swapper memory space">
<operator, )>
<punctuator, ;>
<identifier, size>
<operator, =>
<operator, (>
<identifier, size>
<operator, +>
<integer_constant, 0x3fffff>
<operator, )>
<operator, >>>
<integer_constant, 22>
<punctuator, ;>
<identifier, dir>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<identifier, from>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<keyword, for>
<operator, (>
<punctuator, ;>
<identifier, size>
<operator, -->
<operator, >>
<integer_constant, 0>
<punctuator, ;>
<identifier, dir>
<operator, ++>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<integer_constant, 1>
<operator, &>
<operator, *>
<identifier, dir>
<operator, )>
<operator, )>
<keyword, continue>
<punctuator, ;>
<identifier, pg_table>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<identifier, dir>
<operator, )>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, nr>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, nr>
<operator, <>
<integer_constant, 1024>
<punctuator, ;>
<identifier, nr>
<operator, ++>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<integer_constant, 1>
<operator, &>
<operator, *>
<identifier, pg_table>
<operator, )>
<identifier, free_page>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<identifier, pg_table>
<operator, )>
<punctuator, ;>
<operator, *>
<identifier, pg_table>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, pg_table>
<operator, ++>
<punctuator, ;>
<punctuator, }>
<identifier, free_page>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<identifier, dir>
<operator, )>
<punctuator, ;>
<operator, *>
<identifier, dir>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<identifier, invalidate>
<operator, (>
<operator, )>
<punctuator, ;>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, copy_page_tables>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, from>
<operator, ,>
<keyword, unsigned>
<keyword, long>
<identifier, to>
<operator, ,>
<keyword, long>
<identifier, size>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, from_page_table>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, to_page_table>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, this_page>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, from_dir>
<operator, ,>
<operator, *>
<identifier, to_dir>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, nr>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, (>
<identifier, from>
<operator, &>
<integer_constant, 0x3fffff>
<operator, )>
<operator, |>
<operator, |>
<operator, (>
<identifier, to>
<operator, &>
<integer_constant, 0x3fffff>
<operator, )>
<operator, )>
<identifier, panic>
<operator, (>
<string_literal, "copy_page_tables called with wrong alignment">
<operator, )>
<punctuator, ;>
<identifier, from_dir>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<identifier, from>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<identifier, to_dir>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<identifier, to>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<identifier, size>
<operator, =>
<operator, (>
<operator, (>
<keyword, unsigned>
<operator, )>
<operator, (>
<identifier, size>
<operator, +>
<integer_constant, 0x3fffff>
<operator, )>
<operator, )>
<operator, >>>
<integer_constant, 22>
<punctuator, ;>
<keyword, for>
<operator, (>
<punctuator, ;>
<identifier, size>
<operator, -->
<operator, >>
<integer_constant, 0>
<punctuator, ;>
<identifier, from_dir>
<operator, ++>
<operator, ,>
<identifier, to_dir>
<operator, ++>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<integer_constant, 1>
<operator, &>
<operator, *>
<identifier, to_dir>
<operator, )>
<identifier, panic>
<operator, (>
<string_literal, "copy_page_tables: already exist">
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<integer_constant, 1>
<operator, &>
<operator, *>
<identifier, from_dir>
<operator, )>
<operator, )>
<keyword, continue>
<punctuator, ;>
<identifier, from_page_table>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<identifier, from_dir>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, to_page_table>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, get_free_page>
<operator, (>
<operator, )>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<integer_constant, 1>
<punctuator, ;>
<operator, *>
<identifier, to_dir>
<operator, =>
<operator, (>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, )>
<identifier, to_page_table>
<operator, )>
<operator, |>
<integer_constant, 7>
<punctuator, ;>
<identifier, nr>
<operator, =>
<operator, (>
<identifier, from>
<operator, ==>
<integer_constant, 0>
<operator, )>
<operator, ?>
<integer_constant, 0xA0>
<operator, :>
<integer_constant, 1024>
<punctuator, ;>
<keyword, for>
<operator, (>
<punctuator, ;>
<identifier, nr>
<operator, -->
<operator, >>
<integer_constant, 0>
<punctuator, ;>
<identifier, from_page_table>
<operator, ++>
<operator, ,>
<identifier, to_page_table>
<operator, ++>
<operator, )>
<punctuator, {>
<identifier, this_page>
<operator, =>
<operator, *>
<identifier, from_page_table>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<integer_constant, 1>
<operator, &>
<identifier, this_page>
<operator, )>
<operator, )>
<keyword, continue>
<punctuator, ;>
<identifier, this_page>
<operator, &>
<operator, =>
<operator, ~>
<integer_constant, 2>
<punctuator, ;>
<operator, *>
<identifier, to_page_table>
<operator, =>
<identifier, this_page>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, this_page>
<operator, >>
<identifier, LOW_MEM>
<operator, )>
<punctuator, {>
<operator, *>
<identifier, from_page_table>
<operator, =>
<identifier, this_page>
<punctuator, ;>
<identifier, this_page>
<operator, ->
<operator, =>
<identifier, LOW_MEM>
<punctuator, ;>
<identifier, this_page>
<operator, >>>
<operator, =>
<integer_constant, 12>
<punctuator, ;>
<identifier, mem_map>
<operator, [>
<identifier, this_page>
<operator, ]>
<operator, ++>
<punctuator, ;>
<punctuator, }>
<punctuator, }>
<punctuator, }>
<identifier, invalidate>
<operator, (>
<operator, )>
<punctuator, ;>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, unsigned>
<keyword, long>
<identifier, put_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, page>
<operator, ,>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<identifier, tmp>
<operator, ,>
<operator, *>
<identifier, page_table>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, page>
<operator, <>
<identifier, LOW_MEM>
<operator, |>
<operator, |>
<identifier, page>
<operator, >>
<operator, =>
<identifier, HIGH_MEMORY>
<operator, )>
<identifier, printk>
<operator, (>
<string_literal, "Trying to put page %p at %p\n">
<operator, ,>
<identifier, page>
<operator, ,>
<identifier, address>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, mem_map>
<operator, [>
<operator, (>
<identifier, page>
<operator, ->
<identifier, LOW_MEM>
<operator, )>
<operator, >>>
<integer_constant, 12>
<operator, ]>
<operator, !>
<operator, =>
<integer_constant, 1>
<operator, )>
<identifier, printk>
<operator, (>
<string_literal, "mem_map disagrees with %p at %p\n">
<operator, ,>
<identifier, page>
<operator, ,>
<identifier, address>
<operator, )>
<punctuator, ;>
<identifier, page_table>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, (>
<operator, *>
<identifier, page_table>
<operator, )>
<operator, &>
<integer_constant, 1>
<operator, )>
<identifier, page_table>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<identifier, page_table>
<operator, )>
<punctuator, ;>
<keyword, else>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, tmp>
<operator, =>
<identifier, get_free_page>
<operator, (>
<operator, )>
<operator, )>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<operator, *>
<identifier, page_table>
<operator, =>
<identifier, tmp>
<operator, |>
<integer_constant, 7>
<punctuator, ;>
<identifier, page_table>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, tmp>
<punctuator, ;>
<punctuator, }>
<identifier, page_table>
<operator, [>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 12>
<operator, )>
<operator, &>
<integer_constant, 0x3ff>
<operator, ]>
<operator, =>
<identifier, page>
<operator, |>
<integer_constant, 7>
<punctuator, ;>
<keyword, return>
<identifier, page>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, un_wp_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, table_entry>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<identifier, old_page>
<operator, ,>
<identifier, new_page>
<punctuator, ;>
<identifier, old_page>
<operator, =>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<identifier, table_entry>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, old_page>
<operator, >>
<operator, =>
<identifier, LOW_MEM>
<operator, &>
<operator, &>
<identifier, mem_map>
<operator, [>
<identifier, MAP_NR>
<operator, (>
<identifier, old_page>
<operator, )>
<operator, ]>
<operator, ==>
<integer_constant, 1>
<operator, )>
<punctuator, {>
<operator, *>
<identifier, table_entry>
<operator, |>
<operator, =>
<integer_constant, 2>
<punctuator, ;>
<identifier, invalidate>
<operator, (>
<operator, )>
<punctuator, ;>
<keyword, return>
<punctuator, ;>
<punctuator, }>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, new_page>
<operator, =>
<identifier, get_free_page>
<operator, (>
<operator, )>
<operator, )>
<operator, )>
<identifier, oom>
<operator, (>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, old_page>
<operator, >>
<operator, =>
<identifier, LOW_MEM>
<operator, )>
<identifier, mem_map>
<operator, [>
<identifier, MAP_NR>
<operator, (>
<identifier, old_page>
<operator, )>
<operator, ]>
<operator, -->
<punctuator, ;>
<operator, *>
<identifier, table_entry>
<operator, =>
<identifier, new_page>
<operator, |>
<integer_constant, 7>
<punctuator, ;>
<identifier, invalidate>
<operator, (>
<operator, )>
<punctuator, ;>
<identifier, copy_page>
<operator, (>
<identifier, old_page>
<operator, ,>
<identifier, new_page>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, do_wp_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, error_code>
<operator, ,>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, )>
<punctuator, {>
<operator, #>
<keyword, if>
<integer_constant, 0>
<keyword, if>
<operator, (>
<identifier, CODE_SPACE>
<operator, (>
<identifier, address>
<operator, )>
<operator, )>
<identifier, do_exit>
<operator, (>
<identifier, SIGSEGV>
<operator, )>
<punctuator, ;>
<operator, #>
<identifier, endif>
<identifier, un_wp_page>
<operator, (>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 10>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<operator, +>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<operator, *>
<operator, (>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<operator, )>
<operator, )>
<operator, )>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, write_verify>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<identifier, page>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<operator, (>
<identifier, page>
<operator, =>
<operator, *>
<operator, (>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<operator, )>
<operator, )>
<operator, &>
<integer_constant, 1>
<operator, )>
<operator, )>
<keyword, return>
<punctuator, ;>
<identifier, page>
<operator, &>
<operator, =>
<integer_constant, 0xfffff000>
<punctuator, ;>
<identifier, page>
<operator, +>
<operator, =>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 10>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, (>
<integer_constant, 3>
<operator, &>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, page>
<operator, )>
<operator, ==>
<integer_constant, 1>
<operator, )>
<identifier, un_wp_page>
<operator, (>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, page>
<operator, )>
<punctuator, ;>
<keyword, return>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, get_empty_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<identifier, tmp>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, tmp>
<operator, =>
<identifier, get_free_page>
<operator, (>
<operator, )>
<operator, )>
<operator, |>
<operator, |>
<operator, !>
<identifier, put_page>
<operator, (>
<identifier, tmp>
<operator, ,>
<identifier, address>
<operator, )>
<operator, )>
<punctuator, {>
<identifier, free_page>
<operator, (>
<identifier, tmp>
<operator, )>
<punctuator, ;>
<identifier, oom>
<operator, (>
<operator, )>
<punctuator, ;>
<punctuator, }>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, try_to_share>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, ,>
<keyword, struct>
<identifier, task_struct>
<operator, *>
<identifier, p>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<identifier, from>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, to>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, from_page>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, to_page>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, phys_addr>
<punctuator, ;>
<identifier, from_page>
<operator, =>
<identifier, to_page>
<operator, =>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<identifier, from_page>
<operator, +>
<operator, =>
<operator, (>
<operator, (>
<identifier, p>
<operator, ->>
<identifier, start_code>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<identifier, to_page>
<operator, +>
<operator, =>
<operator, (>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, start_code>
<operator, >>>
<integer_constant, 20>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<identifier, from>
<operator, =>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, from_page>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, from>
<operator, &>
<integer_constant, 1>
<operator, )>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<identifier, from>
<operator, &>
<operator, =>
<integer_constant, 0xfffff000>
<punctuator, ;>
<identifier, from_page>
<operator, =>
<identifier, from>
<operator, +>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 10>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<identifier, phys_addr>
<operator, =>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, from_page>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, (>
<identifier, phys_addr>
<operator, &>
<integer_constant, 0x41>
<operator, )>
<operator, !>
<operator, =>
<integer_constant, 0x01>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<identifier, phys_addr>
<operator, &>
<operator, =>
<integer_constant, 0xfffff000>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, phys_addr>
<operator, >>
<operator, =>
<identifier, HIGH_MEMORY>
<operator, |>
<operator, |>
<identifier, phys_addr>
<operator, <>
<identifier, LOW_MEM>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<identifier, to>
<operator, =>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, to_page>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, to>
<operator, &>
<integer_constant, 1>
<operator, )>
<operator, )>
<keyword, if>
<operator, (>
<identifier, to>
<operator, =>
<identifier, get_free_page>
<operator, (>
<operator, )>
<operator, )>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, to_page>
<operator, =>
<identifier, to>
<operator, |>
<integer_constant, 7>
<punctuator, ;>
<keyword, else>
<identifier, oom>
<operator, (>
<operator, )>
<punctuator, ;>
<identifier, to>
<operator, &>
<operator, =>
<integer_constant, 0xfffff000>
<punctuator, ;>
<identifier, to_page>
<operator, =>
<identifier, to>
<operator, +>
<operator, (>
<operator, (>
<identifier, address>
<operator, >>>
<integer_constant, 10>
<operator, )>
<operator, &>
<integer_constant, 0xffc>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<integer_constant, 1>
<operator, &>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, to_page>
<operator, )>
<identifier, panic>
<operator, (>
<string_literal, "try_to_share: to_page already exists">
<operator, )>
<punctuator, ;>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, from_page>
<operator, &>
<operator, =>
<operator, ~>
<integer_constant, 2>
<punctuator, ;>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, to_page>
<operator, =>
<operator, *>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, from_page>
<punctuator, ;>
<identifier, invalidate>
<operator, (>
<operator, )>
<punctuator, ;>
<identifier, phys_addr>
<operator, ->
<operator, =>
<identifier, LOW_MEM>
<punctuator, ;>
<identifier, phys_addr>
<operator, >>>
<operator, =>
<integer_constant, 12>
<punctuator, ;>
<identifier, mem_map>
<operator, [>
<identifier, phys_addr>
<operator, ]>
<operator, ++>
<punctuator, ;>
<keyword, return>
<integer_constant, 1>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, share_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, task_struct>
<operator, *>
<operator, *>
<identifier, p>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, current>
<operator, ->>
<identifier, executable>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, executable>
<operator, ->>
<identifier, i_count>
<operator, <>
<integer_constant, 2>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, p>
<operator, =>
<operator, &>
<identifier, LAST_TASK>
<punctuator, ;>
<identifier, p>
<operator, >>
<operator, &>
<identifier, FIRST_TASK>
<punctuator, ;>
<operator, -->
<identifier, p>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, !>
<operator, *>
<identifier, p>
<operator, )>
<keyword, continue>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, current>
<operator, ==>
<operator, *>
<identifier, p>
<operator, )>
<keyword, continue>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, (>
<operator, *>
<identifier, p>
<operator, )>
<operator, ->>
<identifier, executable>
<operator, !>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, executable>
<operator, )>
<keyword, continue>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, try_to_share>
<operator, (>
<identifier, address>
<operator, ,>
<operator, *>
<identifier, p>
<operator, )>
<operator, )>
<keyword, return>
<integer_constant, 1>
<punctuator, ;>
<punctuator, }>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, do_no_page>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, error_code>
<operator, ,>
<keyword, unsigned>
<keyword, long>
<identifier, address>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, nr>
<operator, [>
<integer_constant, 4>
<operator, ]>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, tmp>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<identifier, page>
<punctuator, ;>
<keyword, int>
<identifier, block>
<operator, ,>
<identifier, i>
<punctuator, ;>
<identifier, address>
<operator, &>
<operator, =>
<integer_constant, 0xfffff000>
<punctuator, ;>
<identifier, tmp>
<operator, =>
<identifier, address>
<operator, ->
<identifier, current>
<operator, ->>
<identifier, start_code>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, current>
<operator, ->>
<identifier, executable>
<operator, |>
<operator, |>
<identifier, tmp>
<operator, >>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, end_data>
<operator, )>
<punctuator, {>
<identifier, get_empty_page>
<operator, (>
<identifier, address>
<operator, )>
<punctuator, ;>
<keyword, return>
<punctuator, ;>
<punctuator, }>
<keyword, if>
<operator, (>
<identifier, share_page>
<operator, (>
<identifier, tmp>
<operator, )>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, page>
<operator, =>
<identifier, get_free_page>
<operator, (>
<operator, )>
<operator, )>
<operator, )>
<identifier, oom>
<operator, (>
<operator, )>
<punctuator, ;>
<identifier, block>
<operator, =>
<integer_constant, 1>
<operator, +>
<identifier, tmp>
<operator, />
<identifier, BLOCK_SIZE>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<integer_constant, 4>
<punctuator, ;>
<identifier, block>
<operator, ++>
<operator, ,>
<identifier, i>
<operator, ++>
<operator, )>
<identifier, nr>
<operator, [>
<identifier, i>
<operator, ]>
<operator, =>
<identifier, bmap>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, executable>
<operator, ,>
<identifier, block>
<operator, )>
<punctuator, ;>
<identifier, bread_page>
<operator, (>
<identifier, page>
<operator, ,>
<identifier, current>
<operator, ->>
<identifier, executable>
<operator, ->>
<identifier, i_dev>
<operator, ,>
<identifier, nr>
<operator, )>
<punctuator, ;>
<identifier, i>
<operator, =>
<identifier, tmp>
<operator, +>
<integer_constant, 4096>
<operator, ->
<identifier, current>
<operator, ->>
<identifier, end_data>
<punctuator, ;>
<identifier, tmp>
<operator, =>
<identifier, page>
<operator, +>
<integer_constant, 4096>
<punctuator, ;>
<keyword, while>
<operator, (>
<identifier, i>
<operator, -->
<operator, >>
<integer_constant, 0>
<operator, )>
<punctuator, {>
<identifier, tmp>
<operator, -->
<punctuator, ;>
<operator, *>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<identifier, tmp>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, if>
<operator, (>
<identifier, put_page>
<operator, (>
<identifier, page>
<operator, ,>
<identifier, address>
<operator, )>
<operator, )>
<keyword, return>
<punctuator, ;>
<identifier, free_page>
<operator, (>
<identifier, page>
<operator, )>
<punctuator, ;>
<identifier, oom>
<operator, (>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, mem_init>
<operator, (>
<keyword, long>
<identifier, start_mem>
<operator, ,>
<keyword, long>
<identifier, end_mem>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<punctuator, ;>
<identifier, HIGH_MEMORY>
<operator, =>
<identifier, end_mem>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<identifier, PAGING_PAGES>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<identifier, mem_map>
<operator, [>
<identifier, i>
<operator, ]>
<operator, =>
<identifier, USED>
<punctuator, ;>
<identifier, i>
<operator, =>
<identifier, MAP_NR>
<operator, (>
<identifier, start_mem>
<operator, )>
<punctuator, ;>
<identifier, end_mem>
<operator, ->
<operator, =>
<identifier, start_mem>
<punctuator, ;>
<identifier, end_mem>
<operator, >>>
<operator, =>
<integer_constant, 12>
<punctuator, ;>
<keyword, while>
<operator, (>
<identifier, end_mem>
<operator, -->
<operator, >>
<integer_constant, 0>
<operator, )>
<identifier, mem_map>
<operator, [>
<identifier, i>
<operator, ++>
<operator, ]>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, calc_mem>
<operator, (>
<keyword, void>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<operator, ,>
<identifier, j>
<operator, ,>
<identifier, k>
<operator, ,>
<identifier, free>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<keyword, long>
<operator, *>
<identifier, pg_tbl>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<identifier, PAGING_PAGES>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<keyword, if>
<operator, (>
<operator, !>
<identifier, mem_map>
<operator, [>
<identifier, i>
<operator, ]>
<operator, )>
<identifier, free>
<operator, ++>
<punctuator, ;>
<identifier, printk>
<operator, (>
<string_literal, "%d pages free (of %d)\n\r">
<operator, ,>
<identifier, free>
<operator, ,>
<identifier, PAGING_PAGES>
<operator, )>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 2>
<punctuator, ;>
<identifier, i>
<operator, <>
<integer_constant, 1024>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<integer_constant, 1>
<operator, &>
<identifier, pg_dir>
<operator, [>
<identifier, i>
<operator, ]>
<operator, )>
<punctuator, {>
<identifier, pg_tbl>
<operator, =>
<operator, (>
<keyword, long>
<operator, *>
<operator, )>
<operator, (>
<integer_constant, 0xfffff000>
<operator, &>
<identifier, pg_dir>
<operator, [>
<identifier, i>
<operator, ]>
<operator, )>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, j>
<operator, =>
<identifier, k>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, j>
<operator, <>
<integer_constant, 1024>
<punctuator, ;>
<identifier, j>
<operator, ++>
<operator, )>
<keyword, if>
<operator, (>
<identifier, pg_tbl>
<operator, [>
<identifier, j>
<operator, ]>
<operator, &>
<integer_constant, 1>
<operator, )>
<identifier, k>
<operator, ++>
<punctuator, ;>
<identifier, printk>
<operator, (>
<string_literal, "Pg-dir[%d] uses %d pages\n">
<operator, ,>
<identifier, i>
<operator, ,>
<identifier, k>
<operator, )>
<punctuator, ;>
<punctuator, }>
<punctuator, }>
<punctuator, }>
