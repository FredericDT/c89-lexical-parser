<punctuator, #>
<identifier, include>
<header_name, <errno.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/sched.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/tty.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/kernel.h>>
<punctuator, #>
<identifier, include>
<header_name, <asm/segment.h>>
<punctuator, #>
<identifier, include>
<header_name, <sys/times.h>>
<punctuator, #>
<identifier, include>
<header_name, <sys/utsname.h>>
<keyword, int>
<identifier, sys_ftime>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_break>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_ptrace>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_stty>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_gtty>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_rename>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_prof>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_setregid>
<operator, (>
<keyword, int>
<identifier, rgid>
<operator, ,>
<keyword, int>
<identifier, egid>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, rgid>
<operator, >>
<integer_constant, 0>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, gid>
<operator, ==>
<identifier, rgid>
<operator, )>
<operator, |>
<operator, |>
<identifier, suser>
<operator, (>
<operator, )>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, gid>
<operator, =>
<identifier, rgid>
<punctuator, ;>
<keyword, else>
<keyword, return>
<operator, (>
<operator, ->
<identifier, EPERM>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, if>
<operator, (>
<identifier, egid>
<operator, >>
<integer_constant, 0>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, gid>
<operator, ==>
<identifier, egid>
<operator, )>
<operator, |>
<operator, |>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, egid>
<operator, ==>
<identifier, egid>
<operator, )>
<operator, |>
<operator, |>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, sgid>
<operator, ==>
<identifier, egid>
<operator, )>
<operator, |>
<operator, |>
<identifier, suser>
<operator, (>
<operator, )>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, egid>
<operator, =>
<identifier, egid>
<punctuator, ;>
<keyword, else>
<keyword, return>
<operator, (>
<operator, ->
<identifier, EPERM>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_setgid>
<operator, (>
<keyword, int>
<identifier, gid>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, (>
<identifier, sys_setregid>
<operator, (>
<identifier, gid>
<operator, ,>
<identifier, gid>
<operator, )>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_acct>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_phys>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_lock>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_mpx>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_ulimit>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, ENOSYS>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_time>
<operator, (>
<keyword, long>
<operator, *>
<identifier, tloc>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<punctuator, ;>
<identifier, i>
<operator, =>
<identifier, CURRENT_TIME>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, tloc>
<operator, )>
<punctuator, {>
<identifier, verify_area>
<operator, (>
<identifier, tloc>
<operator, ,>
<integer_constant, 4>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, i>
<operator, ,>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, tloc>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, return>
<identifier, i>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_setreuid>
<operator, (>
<keyword, int>
<identifier, ruid>
<operator, ,>
<keyword, int>
<identifier, euid>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, old_ruid>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, uid>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, ruid>
<operator, >>
<integer_constant, 0>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, euid>
<operator, ==>
<identifier, ruid>
<operator, )>
<operator, |>
<operator, |>
<operator, (>
<identifier, old_ruid>
<operator, ==>
<identifier, ruid>
<operator, )>
<operator, |>
<operator, |>
<identifier, suser>
<operator, (>
<operator, )>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, uid>
<operator, =>
<identifier, ruid>
<punctuator, ;>
<keyword, else>
<keyword, return>
<operator, (>
<operator, ->
<identifier, EPERM>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, if>
<operator, (>
<identifier, euid>
<operator, >>
<integer_constant, 0>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, (>
<identifier, old_ruid>
<operator, ==>
<identifier, euid>
<operator, )>
<operator, |>
<operator, |>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, euid>
<operator, ==>
<identifier, euid>
<operator, )>
<operator, |>
<operator, |>
<identifier, suser>
<operator, (>
<operator, )>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, euid>
<operator, =>
<identifier, euid>
<punctuator, ;>
<keyword, else>
<punctuator, {>
<identifier, current>
<operator, ->>
<identifier, uid>
<operator, =>
<identifier, old_ruid>
<punctuator, ;>
<keyword, return>
<operator, (>
<operator, ->
<identifier, EPERM>
<operator, )>
<punctuator, ;>
<punctuator, }>
<punctuator, }>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_setuid>
<operator, (>
<keyword, int>
<identifier, uid>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, (>
<identifier, sys_setreuid>
<operator, (>
<identifier, uid>
<operator, ,>
<identifier, uid>
<operator, )>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_stime>
<operator, (>
<keyword, long>
<operator, *>
<identifier, tptr>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<operator, !>
<identifier, suser>
<operator, (>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EPERM>
<punctuator, ;>
<identifier, startup_time>
<operator, =>
<identifier, get_fs_long>
<operator, (>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<identifier, tptr>
<operator, )>
<operator, ->
<identifier, jiffies>
<operator, />
<identifier, HZ>
<punctuator, ;>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_times>
<operator, (>
<keyword, struct>
<identifier, tms>
<operator, *>
<identifier, tbuf>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, tbuf>
<operator, )>
<punctuator, {>
<identifier, verify_area>
<operator, (>
<identifier, tbuf>
<operator, ,>
<keyword, sizeof>
<operator, *>
<identifier, tbuf>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, utime>
<operator, ,>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, &>
<identifier, tbuf>
<operator, ->>
<identifier, tms_utime>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, stime>
<operator, ,>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, &>
<identifier, tbuf>
<operator, ->>
<identifier, tms_stime>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, cutime>
<operator, ,>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, &>
<identifier, tbuf>
<operator, ->>
<identifier, tms_cutime>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, cstime>
<operator, ,>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, *>
<operator, )>
<operator, &>
<identifier, tbuf>
<operator, ->>
<identifier, tms_cstime>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, return>
<identifier, jiffies>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_brk>
<operator, (>
<keyword, unsigned>
<keyword, long>
<identifier, end_data_seg>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, end_data_seg>
<operator, >>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, end_code>
<operator, &>
<operator, &>
<identifier, end_data_seg>
<operator, <>
<identifier, current>
<operator, ->>
<identifier, start_stack>
<operator, ->
<integer_constant, 16384>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, brk>
<operator, =>
<identifier, end_data_seg>
<punctuator, ;>
<keyword, return>
<identifier, current>
<operator, ->>
<identifier, brk>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_setpgid>
<operator, (>
<keyword, int>
<identifier, pid>
<operator, ,>
<keyword, int>
<identifier, pgid>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, pid>
<operator, )>
<identifier, pid>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, pid>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, pgid>
<operator, )>
<identifier, pgid>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, pid>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<identifier, NR_TASKS>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<keyword, if>
<operator, (>
<identifier, task>
<operator, [>
<identifier, i>
<operator, ]>
<operator, &>
<operator, &>
<identifier, task>
<operator, [>
<identifier, i>
<operator, ]>
<operator, ->>
<identifier, pid>
<operator, ==>
<identifier, pid>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, task>
<operator, [>
<identifier, i>
<operator, ]>
<operator, ->>
<identifier, leader>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EPERM>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, task>
<operator, [>
<identifier, i>
<operator, ]>
<operator, ->>
<identifier, session>
<operator, !>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, session>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EPERM>
<punctuator, ;>
<identifier, task>
<operator, [>
<identifier, i>
<operator, ]>
<operator, ->>
<identifier, pgrp>
<operator, =>
<identifier, pgid>
<punctuator, ;>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, return>
<operator, ->
<identifier, ESRCH>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_getpgrp>
<operator, (>
<keyword, void>
<operator, )>
<punctuator, {>
<keyword, return>
<identifier, current>
<operator, ->>
<identifier, pgrp>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_setsid>
<operator, (>
<keyword, void>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, leader>
<operator, &>
<operator, &>
<operator, !>
<identifier, suser>
<operator, (>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EPERM>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, leader>
<operator, =>
<integer_constant, 1>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, session>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, pgrp>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, pid>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, tty>
<operator, =>
<operator, ->
<integer_constant, 1>
<punctuator, ;>
<keyword, return>
<identifier, current>
<operator, ->>
<identifier, pgrp>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_uname>
<operator, (>
<keyword, struct>
<identifier, utsname>
<operator, *>
<identifier, name>
<operator, )>
<punctuator, {>
<keyword, static>
<keyword, struct>
<identifier, utsname>
<identifier, thisname>
<operator, =>
<punctuator, {>
<string_literal, "linux .0">
<operator, ,>
<string_literal, "nodename">
<operator, ,>
<string_literal, "release ">
<operator, ,>
<string_literal, "version ">
<operator, ,>
<string_literal, "machine ">
<punctuator, }>
<punctuator, ;>
<keyword, int>
<identifier, i>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, name>
<operator, )>
<keyword, return>
<operator, ->
<identifier, ERROR>
<punctuator, ;>
<identifier, verify_area>
<operator, (>
<identifier, name>
<operator, ,>
<keyword, sizeof>
<operator, *>
<identifier, name>
<operator, )>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<keyword, sizeof>
<operator, *>
<identifier, name>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<identifier, put_fs_byte>
<operator, (>
<operator, (>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<operator, &>
<identifier, thisname>
<operator, )>
<operator, [>
<identifier, i>
<operator, ]>
<operator, ,>
<identifier, i>
<operator, +>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<identifier, name>
<operator, )>
<punctuator, ;>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_umask>
<operator, (>
<keyword, int>
<identifier, mask>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, old>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, umask>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, umask>
<operator, =>
<identifier, mask>
<operator, &>
<integer_constant, 0777>
<punctuator, ;>
<keyword, return>
<operator, (>
<identifier, old>
<operator, )>
<punctuator, ;>
<punctuator, }>
