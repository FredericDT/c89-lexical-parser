<punctuator, #>
<identifier, include>
<header_name, <linux/sched.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/kernel.h>>
<punctuator, #>
<identifier, include>
<header_name, <asm/segment.h>>
<punctuator, #>
<identifier, include>
<header_name, <signal.h>>
<keyword, volatile>
<keyword, void>
<identifier, do_exit>
<operator, (>
<keyword, int>
<identifier, error_code>
<operator, )>
<punctuator, ;>
<keyword, int>
<identifier, sys_sgetmask>
<operator, (>
<operator, )>
<punctuator, {>
<keyword, return>
<identifier, current>
<operator, ->>
<identifier, blocked>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_ssetmask>
<operator, (>
<keyword, int>
<identifier, newmask>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, old>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, blocked>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, blocked>
<operator, =>
<identifier, newmask>
<operator, &>
<operator, ~>
<operator, (>
<integer_constant, 1>
<operator, <<>
<operator, (>
<identifier, SIGKILL>
<operator, ->
<integer_constant, 1>
<operator, )>
<operator, )>
<punctuator, ;>
<keyword, return>
<identifier, old>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<identifier, inline>
<keyword, void>
<identifier, save_old>
<operator, (>
<keyword, char>
<operator, *>
<identifier, from>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, to>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<punctuator, ;>
<identifier, verify_area>
<operator, (>
<identifier, to>
<operator, ,>
<keyword, sizeof>
<operator, (>
<keyword, struct>
<identifier, sigaction>
<operator, )>
<operator, )>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<keyword, sizeof>
<operator, (>
<keyword, struct>
<identifier, sigaction>
<operator, )>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<punctuator, {>
<identifier, put_fs_byte>
<operator, (>
<operator, *>
<identifier, from>
<operator, ,>
<identifier, to>
<operator, )>
<punctuator, ;>
<identifier, from>
<operator, ++>
<punctuator, ;>
<identifier, to>
<operator, ++>
<punctuator, ;>
<punctuator, }>
<punctuator, }>
<keyword, static>
<identifier, inline>
<keyword, void>
<identifier, get_new>
<operator, (>
<keyword, char>
<operator, *>
<identifier, from>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, to>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<keyword, sizeof>
<operator, (>
<keyword, struct>
<identifier, sigaction>
<operator, )>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<operator, *>
<operator, (>
<identifier, to>
<operator, ++>
<operator, )>
<operator, =>
<identifier, get_fs_byte>
<operator, (>
<identifier, from>
<operator, ++>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_signal>
<operator, (>
<keyword, int>
<identifier, signum>
<operator, ,>
<keyword, long>
<identifier, handler>
<operator, ,>
<keyword, long>
<identifier, restorer>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, sigaction>
<identifier, tmp>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, signum>
<operator, <>
<integer_constant, 1>
<operator, |>
<operator, |>
<identifier, signum>
<operator, >>
<integer_constant, 32>
<operator, |>
<operator, |>
<identifier, signum>
<operator, ==>
<identifier, SIGKILL>
<operator, )>
<keyword, return>
<operator, ->
<integer_constant, 1>
<punctuator, ;>
<identifier, tmp>
<operator, .>
<identifier, sa_handler>
<operator, =>
<operator, (>
<keyword, void>
<operator, (>
<operator, *>
<operator, )>
<operator, (>
<keyword, int>
<operator, )>
<operator, )>
<identifier, handler>
<punctuator, ;>
<identifier, tmp>
<operator, .>
<identifier, sa_mask>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, tmp>
<operator, .>
<identifier, sa_flags>
<operator, =>
<identifier, SA_ONESHOT>
<operator, |>
<identifier, SA_NOMASK>
<punctuator, ;>
<identifier, tmp>
<operator, .>
<identifier, sa_restorer>
<operator, =>
<operator, (>
<keyword, void>
<operator, (>
<operator, *>
<operator, )>
<operator, (>
<keyword, void>
<operator, )>
<operator, )>
<identifier, restorer>
<punctuator, ;>
<identifier, handler>
<operator, =>
<operator, (>
<keyword, long>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, [>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, ]>
<operator, .>
<identifier, sa_handler>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, [>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, ]>
<operator, =>
<identifier, tmp>
<punctuator, ;>
<keyword, return>
<identifier, handler>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_sigaction>
<operator, (>
<keyword, int>
<identifier, signum>
<operator, ,>
<keyword, const>
<keyword, struct>
<identifier, sigaction>
<operator, *>
<identifier, action>
<operator, ,>
<keyword, struct>
<identifier, sigaction>
<operator, *>
<identifier, oldaction>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, sigaction>
<identifier, tmp>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, signum>
<operator, <>
<integer_constant, 1>
<operator, |>
<operator, |>
<identifier, signum>
<operator, >>
<integer_constant, 32>
<operator, |>
<operator, |>
<identifier, signum>
<operator, ==>
<identifier, SIGKILL>
<operator, )>
<keyword, return>
<operator, ->
<integer_constant, 1>
<punctuator, ;>
<identifier, tmp>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, [>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, ]>
<punctuator, ;>
<identifier, get_new>
<operator, (>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<identifier, action>
<operator, ,>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<operator, (>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, +>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, )>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, oldaction>
<operator, )>
<identifier, save_old>
<operator, (>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<operator, &>
<identifier, tmp>
<operator, ,>
<operator, (>
<keyword, char>
<operator, *>
<operator, )>
<identifier, oldaction>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, [>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, ]>
<operator, .>
<identifier, sa_flags>
<operator, &>
<identifier, SA_NOMASK>
<operator, )>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, [>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, ]>
<operator, .>
<identifier, sa_mask>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<keyword, else>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, [>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, ]>
<operator, .>
<identifier, sa_mask>
<operator, |>
<operator, =>
<operator, (>
<integer_constant, 1>
<operator, <<>
<operator, (>
<identifier, signum>
<operator, ->
<integer_constant, 1>
<operator, )>
<operator, )>
<punctuator, ;>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, do_signal>
<operator, (>
<keyword, long>
<identifier, signr>
<operator, ,>
<keyword, long>
<identifier, eax>
<operator, ,>
<keyword, long>
<identifier, ebx>
<operator, ,>
<keyword, long>
<identifier, ecx>
<operator, ,>
<keyword, long>
<identifier, edx>
<operator, ,>
<keyword, long>
<identifier, fs>
<operator, ,>
<keyword, long>
<identifier, es>
<operator, ,>
<keyword, long>
<identifier, ds>
<operator, ,>
<keyword, long>
<identifier, eip>
<operator, ,>
<keyword, long>
<identifier, cs>
<operator, ,>
<keyword, long>
<identifier, eflags>
<operator, ,>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, esp>
<operator, ,>
<keyword, long>
<identifier, ss>
<operator, )>
<punctuator, {>
<keyword, unsigned>
<keyword, long>
<identifier, sa_handler>
<punctuator, ;>
<keyword, long>
<identifier, old_eip>
<operator, =>
<identifier, eip>
<punctuator, ;>
<keyword, struct>
<identifier, sigaction>
<operator, *>
<identifier, sa>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, sigaction>
<operator, +>
<identifier, signr>
<operator, ->
<integer_constant, 1>
<punctuator, ;>
<keyword, int>
<identifier, longs>
<punctuator, ;>
<keyword, unsigned>
<keyword, long>
<operator, *>
<identifier, tmp_esp>
<punctuator, ;>
<identifier, sa_handler>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, long>
<operator, )>
<identifier, sa>
<operator, ->>
<identifier, sa_handler>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, sa_handler>
<operator, ==>
<integer_constant, 1>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, sa_handler>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, signr>
<operator, ==>
<identifier, SIGCHLD>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, else>
<identifier, do_exit>
<operator, (>
<integer_constant, 1>
<operator, <<>
<operator, (>
<identifier, signr>
<operator, ->
<integer_constant, 1>
<operator, )>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, if>
<operator, (>
<identifier, sa>
<operator, ->>
<identifier, sa_flags>
<operator, &>
<identifier, SA_ONESHOT>
<operator, )>
<identifier, sa>
<operator, ->>
<identifier, sa_handler>
<operator, =>
<identifier, NULL>
<punctuator, ;>
<operator, *>
<operator, (>
<operator, &>
<identifier, eip>
<operator, )>
<operator, =>
<identifier, sa_handler>
<punctuator, ;>
<identifier, longs>
<operator, =>
<operator, (>
<identifier, sa>
<operator, ->>
<identifier, sa_flags>
<operator, &>
<identifier, SA_NOMASK>
<operator, )>
<operator, ?>
<integer_constant, 7>
<operator, :>
<integer_constant, 8>
<punctuator, ;>
<operator, *>
<operator, (>
<operator, &>
<identifier, esp>
<operator, )>
<operator, ->
<operator, =>
<identifier, longs>
<punctuator, ;>
<identifier, verify_area>
<operator, (>
<identifier, esp>
<operator, ,>
<identifier, longs>
<operator, *>
<integer_constant, 4>
<operator, )>
<punctuator, ;>
<identifier, tmp_esp>
<operator, =>
<identifier, esp>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<operator, (>
<keyword, long>
<operator, )>
<identifier, sa>
<operator, ->>
<identifier, sa_restorer>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, signr>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, sa>
<operator, ->>
<identifier, sa_flags>
<operator, &>
<identifier, SA_NOMASK>
<operator, )>
<operator, )>
<identifier, put_fs_long>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, blocked>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, eax>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, ecx>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, edx>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, eflags>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, put_fs_long>
<operator, (>
<identifier, old_eip>
<operator, ,>
<identifier, tmp_esp>
<operator, ++>
<operator, )>
<punctuator, ;>
<identifier, current>
<operator, ->>
<identifier, blocked>
<operator, |>
<operator, =>
<identifier, sa>
<operator, ->>
<identifier, sa_mask>
<punctuator, ;>
<punctuator, }>
