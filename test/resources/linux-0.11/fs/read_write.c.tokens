<punctuator, #>
<identifier, include>
<header_name, <sys/stat.h>>
<punctuator, #>
<identifier, include>
<header_name, <errno.h>>
<punctuator, #>
<identifier, include>
<header_name, <sys/types.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/kernel.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/sched.h>>
<punctuator, #>
<identifier, include>
<header_name, <asm/segment.h>>
<keyword, extern>
<keyword, int>
<identifier, rw_char>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, int>
<identifier, dev>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, read_pipe>
<operator, (>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, write_pipe>
<operator, (>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, block_read>
<operator, (>
<keyword, int>
<identifier, dev>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, block_write>
<operator, (>
<keyword, int>
<identifier, dev>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, file_read>
<operator, (>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<operator, ,>
<keyword, struct>
<identifier, file>
<operator, *>
<identifier, filp>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, file_write>
<operator, (>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<operator, ,>
<keyword, struct>
<identifier, file>
<operator, *>
<identifier, filp>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, int>
<identifier, sys_lseek>
<operator, (>
<keyword, unsigned>
<keyword, int>
<identifier, fd>
<operator, ,>
<identifier, off_t>
<identifier, offset>
<operator, ,>
<keyword, int>
<identifier, origin>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, file>
<operator, *>
<identifier, file>
<punctuator, ;>
<keyword, int>
<identifier, tmp>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, fd>
<operator, >>
<operator, =>
<identifier, NR_OPEN>
<operator, |>
<operator, |>
<operator, !>
<operator, (>
<identifier, file>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, filp>
<operator, [>
<identifier, fd>
<operator, ]>
<operator, )>
<operator, |>
<operator, |>
<operator, !>
<operator, (>
<identifier, file>
<operator, ->>
<identifier, f_inode>
<operator, )>
<operator, |>
<operator, |>
<operator, !>
<identifier, IS_SEEKABLE>
<operator, (>
<identifier, MAJOR>
<operator, (>
<identifier, file>
<operator, ->>
<identifier, f_inode>
<operator, ->>
<identifier, i_dev>
<operator, )>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EBADF>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, file>
<operator, ->>
<identifier, f_inode>
<operator, ->>
<identifier, i_pipe>
<operator, )>
<keyword, return>
<operator, ->
<identifier, ESPIPE>
<punctuator, ;>
<keyword, switch>
<operator, (>
<identifier, origin>
<operator, )>
<punctuator, {>
<keyword, case>
<integer_constant, 0>
<operator, :>
<keyword, if>
<operator, (>
<identifier, offset>
<operator, <>
<integer_constant, 0>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, =>
<identifier, offset>
<punctuator, ;>
<keyword, break>
<punctuator, ;>
<keyword, case>
<integer_constant, 1>
<operator, :>
<keyword, if>
<operator, (>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, +>
<identifier, offset>
<operator, <>
<integer_constant, 0>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, +>
<operator, =>
<identifier, offset>
<punctuator, ;>
<keyword, break>
<punctuator, ;>
<keyword, case>
<integer_constant, 2>
<operator, :>
<keyword, if>
<operator, (>
<operator, (>
<identifier, tmp>
<operator, =>
<identifier, file>
<operator, ->>
<identifier, f_inode>
<operator, ->>
<identifier, i_size>
<operator, +>
<identifier, offset>
<operator, )>
<operator, <>
<integer_constant, 0>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, =>
<identifier, tmp>
<punctuator, ;>
<keyword, break>
<punctuator, ;>
<keyword, default>
<operator, :>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<punctuator, }>
<keyword, return>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_read>
<operator, (>
<keyword, unsigned>
<keyword, int>
<identifier, fd>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, file>
<operator, *>
<identifier, file>
<punctuator, ;>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, fd>
<operator, >>
<operator, =>
<identifier, NR_OPEN>
<operator, |>
<operator, |>
<identifier, count>
<operator, <>
<integer_constant, 0>
<operator, |>
<operator, |>
<operator, !>
<operator, (>
<identifier, file>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, filp>
<operator, [>
<identifier, fd>
<operator, ]>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, count>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<identifier, verify_area>
<operator, (>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<punctuator, ;>
<identifier, inode>
<operator, =>
<identifier, file>
<operator, ->>
<identifier, f_inode>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_pipe>
<operator, )>
<keyword, return>
<operator, (>
<identifier, file>
<operator, ->>
<identifier, f_mode>
<operator, &>
<integer_constant, 1>
<operator, )>
<operator, ?>
<identifier, read_pipe>
<operator, (>
<identifier, inode>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<operator, :>
<operator, ->
<identifier, EIO>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, S_ISCHR>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<keyword, return>
<identifier, rw_char>
<operator, (>
<identifier, READ>
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 0>
<operator, ]>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<operator, &>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, S_ISBLK>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<keyword, return>
<identifier, block_read>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 0>
<operator, ]>
<operator, ,>
<operator, &>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, S_ISDIR>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, |>
<operator, |>
<identifier, S_ISREG>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, count>
<operator, +>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, >>
<identifier, inode>
<operator, ->>
<identifier, i_size>
<operator, )>
<identifier, count>
<operator, =>
<identifier, inode>
<operator, ->>
<identifier, i_size>
<operator, ->
<identifier, file>
<operator, ->>
<identifier, f_pos>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, count>
<operator, <>
<operator, =>
<integer_constant, 0>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<keyword, return>
<identifier, file_read>
<operator, (>
<identifier, inode>
<operator, ,>
<identifier, file>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<punctuator, ;>
<punctuator, }>
<identifier, printk>
<operator, (>
<string_literal, "(Read)inode->i_mode=%06o\n\r">
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<punctuator, ;>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<punctuator, }>
<keyword, int>
<identifier, sys_write>
<operator, (>
<keyword, unsigned>
<keyword, int>
<identifier, fd>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, file>
<operator, *>
<identifier, file>
<punctuator, ;>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, fd>
<operator, >>
<operator, =>
<identifier, NR_OPEN>
<operator, |>
<operator, |>
<identifier, count>
<operator, <>
<integer_constant, 0>
<operator, |>
<operator, |>
<operator, !>
<operator, (>
<identifier, file>
<operator, =>
<identifier, current>
<operator, ->>
<identifier, filp>
<operator, [>
<identifier, fd>
<operator, ]>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, count>
<operator, )>
<keyword, return>
<integer_constant, 0>
<punctuator, ;>
<identifier, inode>
<operator, =>
<identifier, file>
<operator, ->>
<identifier, f_inode>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_pipe>
<operator, )>
<keyword, return>
<operator, (>
<identifier, file>
<operator, ->>
<identifier, f_mode>
<operator, &>
<integer_constant, 2>
<operator, )>
<operator, ?>
<identifier, write_pipe>
<operator, (>
<identifier, inode>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<operator, :>
<operator, ->
<identifier, EIO>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, S_ISCHR>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<keyword, return>
<identifier, rw_char>
<operator, (>
<identifier, WRITE>
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 0>
<operator, ]>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<operator, &>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, S_ISBLK>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<keyword, return>
<identifier, block_write>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 0>
<operator, ]>
<operator, ,>
<operator, &>
<identifier, file>
<operator, ->>
<identifier, f_pos>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, S_ISREG>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<keyword, return>
<identifier, file_write>
<operator, (>
<identifier, inode>
<operator, ,>
<identifier, file>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<punctuator, ;>
<identifier, printk>
<operator, (>
<string_literal, "(Write)inode->i_mode=%06o\n\r">
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<punctuator, ;>
<keyword, return>
<operator, ->
<identifier, EINVAL>
<punctuator, ;>
<punctuator, }>
