<punctuator, #>
<identifier, include>
<header_name, <errno.h>>
<punctuator, #>
<identifier, include>
<header_name, <sys/types.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/sched.h>>
<punctuator, #>
<identifier, include>
<header_name, <linux/kernel.h>>
<punctuator, #>
<identifier, include>
<header_name, <asm/segment.h>>
<punctuator, #>
<identifier, include>
<header_name, <asm/io.h>>
<keyword, extern>
<keyword, int>
<identifier, tty_read>
<operator, (>
<keyword, unsigned>
<identifier, minor>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, extern>
<keyword, int>
<identifier, tty_write>
<operator, (>
<keyword, unsigned>
<identifier, minor>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, )>
<punctuator, ;>
<keyword, typedef>
<operator, (>
<operator, *>
<identifier, crw_ptr>
<operator, )>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, unsigned>
<identifier, minor>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, ;>
<keyword, static>
<keyword, int>
<identifier, rw_ttyx>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, unsigned>
<identifier, minor>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, (>
<operator, (>
<identifier, rw>
<operator, ==>
<identifier, READ>
<operator, )>
<operator, ?>
<identifier, tty_read>
<operator, (>
<identifier, minor>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<operator, :>
<identifier, tty_write>
<operator, (>
<identifier, minor>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, )>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, rw_tty>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, unsigned>
<identifier, minor>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, current>
<operator, ->>
<identifier, tty>
<operator, <>
<integer_constant, 0>
<operator, )>
<keyword, return>
<operator, ->
<identifier, EPERM>
<punctuator, ;>
<keyword, return>
<identifier, rw_ttyx>
<operator, (>
<identifier, rw>
<operator, ,>
<identifier, current>
<operator, ->>
<identifier, tty>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<identifier, pos>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, rw_ram>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, EIO>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, rw_mem>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, EIO>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, rw_kmem>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, return>
<operator, ->
<identifier, EIO>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, rw_port>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<operator, =>
<operator, *>
<identifier, pos>
<punctuator, ;>
<keyword, while>
<operator, (>
<identifier, count>
<operator, -->
<operator, >>
<integer_constant, 0>
<operator, &>
<operator, &>
<identifier, i>
<operator, <>
<integer_constant, 65536>
<operator, )>
<punctuator, {>
<keyword, if>
<operator, (>
<identifier, rw>
<operator, ==>
<identifier, READ>
<operator, )>
<identifier, put_fs_byte>
<operator, (>
<identifier, inb>
<operator, (>
<identifier, i>
<operator, )>
<operator, ,>
<identifier, buf>
<operator, ++>
<operator, )>
<punctuator, ;>
<keyword, else>
<identifier, outb>
<operator, (>
<identifier, get_fs_byte>
<operator, (>
<identifier, buf>
<operator, ++>
<operator, )>
<operator, ,>
<identifier, i>
<operator, )>
<punctuator, ;>
<identifier, i>
<operator, ++>
<punctuator, ;>
<punctuator, }>
<identifier, i>
<operator, ->
<operator, =>
<operator, *>
<identifier, pos>
<punctuator, ;>
<operator, *>
<identifier, pos>
<operator, +>
<operator, =>
<identifier, i>
<punctuator, ;>
<keyword, return>
<identifier, i>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, int>
<identifier, rw_memory>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, unsigned>
<identifier, minor>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<keyword, switch>
<operator, (>
<identifier, minor>
<operator, )>
<punctuator, {>
<keyword, case>
<integer_constant, 0>
<operator, :>
<keyword, return>
<identifier, rw_ram>
<operator, (>
<identifier, rw>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<identifier, pos>
<operator, )>
<punctuator, ;>
<keyword, case>
<integer_constant, 1>
<operator, :>
<keyword, return>
<identifier, rw_mem>
<operator, (>
<identifier, rw>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<identifier, pos>
<operator, )>
<punctuator, ;>
<keyword, case>
<integer_constant, 2>
<operator, :>
<keyword, return>
<identifier, rw_kmem>
<operator, (>
<identifier, rw>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<identifier, pos>
<operator, )>
<punctuator, ;>
<keyword, case>
<integer_constant, 3>
<operator, :>
<keyword, return>
<operator, (>
<identifier, rw>
<operator, ==>
<identifier, READ>
<operator, )>
<operator, ?>
<integer_constant, 0>
<operator, :>
<identifier, count>
<punctuator, ;>
<keyword, case>
<integer_constant, 4>
<operator, :>
<keyword, return>
<identifier, rw_port>
<operator, (>
<identifier, rw>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<identifier, pos>
<operator, )>
<punctuator, ;>
<keyword, default>
<operator, :>
<keyword, return>
<operator, ->
<identifier, EIO>
<punctuator, ;>
<punctuator, }>
<punctuator, }>
<operator, #>
<identifier, define>
<identifier, NRDEVS>
<operator, (>
<operator, (>
<keyword, sizeof>
<operator, (>
<identifier, crw_table>
<operator, )>
<operator, )>
<operator, />
<operator, (>
<keyword, sizeof>
<operator, (>
<identifier, crw_ptr>
<operator, )>
<operator, )>
<operator, )>
<keyword, static>
<identifier, crw_ptr>
<identifier, crw_table>
<operator, [>
<operator, ]>
<operator, =>
<punctuator, {>
<identifier, NULL>
<operator, ,>
<identifier, rw_memory>
<operator, ,>
<identifier, NULL>
<operator, ,>
<identifier, NULL>
<operator, ,>
<identifier, rw_ttyx>
<operator, ,>
<identifier, rw_tty>
<operator, ,>
<identifier, NULL>
<operator, ,>
<identifier, NULL>
<punctuator, }>
<punctuator, ;>
<keyword, int>
<identifier, rw_char>
<operator, (>
<keyword, int>
<identifier, rw>
<operator, ,>
<keyword, int>
<identifier, dev>
<operator, ,>
<keyword, char>
<operator, *>
<identifier, buf>
<operator, ,>
<keyword, int>
<identifier, count>
<operator, ,>
<identifier, off_t>
<operator, *>
<identifier, pos>
<operator, )>
<punctuator, {>
<identifier, crw_ptr>
<identifier, call_addr>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, MAJOR>
<operator, (>
<identifier, dev>
<operator, )>
<operator, >>
<operator, =>
<identifier, NRDEVS>
<operator, )>
<keyword, return>
<operator, ->
<identifier, ENODEV>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, call_addr>
<operator, =>
<identifier, crw_table>
<operator, [>
<identifier, MAJOR>
<operator, (>
<identifier, dev>
<operator, )>
<operator, ]>
<operator, )>
<operator, )>
<keyword, return>
<operator, ->
<identifier, ENODEV>
<punctuator, ;>
<keyword, return>
<identifier, call_addr>
<operator, (>
<identifier, rw>
<operator, ,>
<identifier, MINOR>
<operator, (>
<identifier, dev>
<operator, )>
<operator, ,>
<identifier, buf>
<operator, ,>
<identifier, count>
<operator, ,>
<identifier, pos>
<operator, )>
<punctuator, ;>
<punctuator, }>
