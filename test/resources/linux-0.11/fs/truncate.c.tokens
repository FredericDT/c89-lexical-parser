<punctuator, #>
<identifier, include>
<header_name, <linux/sched.h>>
<punctuator, #>
<identifier, include>
<header_name, <sys/stat.h>>
<keyword, static>
<keyword, void>
<identifier, free_ind>
<operator, (>
<keyword, int>
<identifier, dev>
<operator, ,>
<keyword, int>
<identifier, block>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, buffer_head>
<operator, *>
<identifier, bh>
<punctuator, ;>
<keyword, unsigned>
<keyword, short>
<operator, *>
<identifier, p>
<punctuator, ;>
<keyword, int>
<identifier, i>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, block>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, bh>
<operator, =>
<identifier, bread>
<operator, (>
<identifier, dev>
<operator, ,>
<identifier, block>
<operator, )>
<operator, )>
<punctuator, {>
<identifier, p>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, short>
<operator, *>
<operator, )>
<identifier, bh>
<operator, ->>
<identifier, b_data>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<integer_constant, 512>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, ,>
<identifier, p>
<operator, ++>
<operator, )>
<keyword, if>
<operator, (>
<operator, *>
<identifier, p>
<operator, )>
<identifier, free_block>
<operator, (>
<identifier, dev>
<operator, ,>
<operator, *>
<identifier, p>
<operator, )>
<punctuator, ;>
<identifier, brelse>
<operator, (>
<identifier, bh>
<operator, )>
<punctuator, ;>
<punctuator, }>
<identifier, free_block>
<operator, (>
<identifier, dev>
<operator, ,>
<identifier, block>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, static>
<keyword, void>
<identifier, free_dind>
<operator, (>
<keyword, int>
<identifier, dev>
<operator, ,>
<keyword, int>
<identifier, block>
<operator, )>
<punctuator, {>
<keyword, struct>
<identifier, buffer_head>
<operator, *>
<identifier, bh>
<punctuator, ;>
<keyword, unsigned>
<keyword, short>
<operator, *>
<identifier, p>
<punctuator, ;>
<keyword, int>
<identifier, i>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<identifier, block>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, if>
<operator, (>
<identifier, bh>
<operator, =>
<identifier, bread>
<operator, (>
<identifier, dev>
<operator, ,>
<identifier, block>
<operator, )>
<operator, )>
<punctuator, {>
<identifier, p>
<operator, =>
<operator, (>
<keyword, unsigned>
<keyword, short>
<operator, *>
<operator, )>
<identifier, bh>
<operator, ->>
<identifier, b_data>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<integer_constant, 512>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, ,>
<identifier, p>
<operator, ++>
<operator, )>
<keyword, if>
<operator, (>
<operator, *>
<identifier, p>
<operator, )>
<identifier, free_ind>
<operator, (>
<identifier, dev>
<operator, ,>
<operator, *>
<identifier, p>
<operator, )>
<punctuator, ;>
<identifier, brelse>
<operator, (>
<identifier, bh>
<operator, )>
<punctuator, ;>
<punctuator, }>
<identifier, free_block>
<operator, (>
<identifier, dev>
<operator, ,>
<identifier, block>
<operator, )>
<punctuator, ;>
<punctuator, }>
<keyword, void>
<identifier, truncate>
<operator, (>
<keyword, struct>
<identifier, m_inode>
<operator, *>
<identifier, inode>
<operator, )>
<punctuator, {>
<keyword, int>
<identifier, i>
<punctuator, ;>
<keyword, if>
<operator, (>
<operator, !>
<operator, (>
<identifier, S_ISREG>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, |>
<operator, |>
<identifier, S_ISDIR>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_mode>
<operator, )>
<operator, )>
<operator, )>
<keyword, return>
<punctuator, ;>
<keyword, for>
<operator, (>
<identifier, i>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, i>
<operator, <>
<integer_constant, 7>
<punctuator, ;>
<identifier, i>
<operator, ++>
<operator, )>
<keyword, if>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<identifier, i>
<operator, ]>
<operator, )>
<punctuator, {>
<identifier, free_block>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_dev>
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<identifier, i>
<operator, ]>
<operator, )>
<punctuator, ;>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<identifier, i>
<operator, ]>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<punctuator, }>
<identifier, free_ind>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_dev>
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 7>
<operator, ]>
<operator, )>
<punctuator, ;>
<identifier, free_dind>
<operator, (>
<identifier, inode>
<operator, ->>
<identifier, i_dev>
<operator, ,>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 8>
<operator, ]>
<operator, )>
<punctuator, ;>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 7>
<operator, ]>
<operator, =>
<identifier, inode>
<operator, ->>
<identifier, i_zone>
<operator, [>
<integer_constant, 8>
<operator, ]>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, inode>
<operator, ->>
<identifier, i_size>
<operator, =>
<integer_constant, 0>
<punctuator, ;>
<identifier, inode>
<operator, ->>
<identifier, i_dirt>
<operator, =>
<integer_constant, 1>
<punctuator, ;>
<identifier, inode>
<operator, ->>
<identifier, i_mtime>
<operator, =>
<identifier, inode>
<operator, ->>
<identifier, i_ctime>
<operator, =>
<identifier, CURRENT_TIME>
<punctuator, ;>
<punctuator, }>
